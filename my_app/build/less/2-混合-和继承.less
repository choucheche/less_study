.bordered {
    border-top: dotted 1px black;
    border-bottom: solid 2px black;
}

#menu a {
    color: #111;
    .bordered;
}

.post a {
    color: red;
    .bordered;
}
/*
.bordered {
  border-top: dotted 1px black;
  border-bottom: solid 2px black;
}

#menu a {
  color: #111;
  .bordered;
}

.post a {
  color: red;
  .bordered;
}
*/
//------------------------------------

#b,
.a {
    color: red;
}

.a {
    font-size: 10px;
}

.mixin-class {
    .a;
}

.mixin-id {
    #b;
}
/*
.a,
#b {
  color: red;
}
.mixin-class {
  color: red;
}
.mixin-id {
  color: red;
}
*/
//----------------------------

.my-mixin {
    color: black;
}

.my-other-mixin() {
    //像这种带括号的样式，不输出到CSS里
    background: white;
}

.class {
    .my-mixin;
    .my-other-mixin;
}
/*
.my-mixin {
  color: black;
}
.class {
  color: black;
  background: white;
}
*/
//------------------------------

.my-hover-mixin() {
    //像这种带括号的样式，不输出到CSS里，所以没有.my-hover-mixin:hover样式
    &:hover {
        border: 1px solid red;
    }
}

button {
    .my-hover-mixin();
}
/*
button:hover {
  border: 1px solid red;
}
*/
//-------------------------------

#my-library {
    .my-mixin() {
        //像这种带括号的样式，不输出到CSS里，所以没有#my-library .my-mixin样式
        color: black;
    }
}

.class {
    #my-library > .my-mixin();
}
/*
.class {
  color: black;
}
*/
//-----------------------

.border-radius(@radius) {
    //这里写了个带参数，的变量样式,  .border-radius()不显示在css里
    -webkit-border-radius: @radius;
    -moz-border-radius: @radius;
    border-radius: @radius;
}

#header {
    .border-radius(4px);
    //继承上面的，变成.border-radius(4px)
}

.button {
    .border-radius(6px);
    //继承上面的，变成.border-radius(6px)
}
/*
#header {
  -webkit-border-radius: 4px;
  -moz-border-radius: 4px;
  border-radius: 4px;
}
.button {
  -webkit-border-radius: 6px;
  -moz-border-radius: 6px;
  border-radius: 6px;
}
*/
//--------------------------------

.border-radius(@radius:5px) {
    //带默认值的 样式变量
    -webkit-border-radius: @radius;
    -moz-border-radius: @radius;
    border-radius: @radius;
}

#header {
    .border-radius;
}
/*
#header {
  -webkit-border-radius: 5px;
  -moz-border-radius: 5px;
  border-radius: 5px;
}
*/
//----------------------------------

.mixin(@color) {
    color-1: @color;
}

.mixin(@color; @padding:2) {
    color-2: @color;
    padding-2: @padding;
}

.mixin(@color; @padding; @margin:2) {
    color-3: @color;
    padding-3: @padding;
    margin: @margin;
}

.some .selector div {
    .mixin(#008000);
    //.some .selector div 继承了 .mixin()的所有样式，并传入参数#008000
}
/*
.some .selector div {
  color-1: #008000;
  color-2: #008000;
  padding-2: 2;
}
*/
//------------------------------

.mixin2(@color:black; @margin: 10px; @padding: 20px) {
    color: @color;
    margin: @margin;
    padding: @padding;
}

.class1 {
    .mixin2(@margin:20px; @color:#33acfe);
    //继承了.mixin2的样式，并用自己的参数覆盖.mixin2的参数值
}

.class2 {
    .mixin2(#efca44; @padding: 40px);
}
/*
.class1 {
  color: #33acfe;
  margin: 20px;
  padding: 20px;
}
.class2 {
  color: #efca44;
  margin: 10px;
  padding: 40px;
}
*/
//-------------------------

.box-shadow(@x:0; @y: 0; @blur: 1px; @color: #000) {
    //传入的值会覆盖掉默认值
    -webkit-box-shadow: @arguments;
    -moz-box-shadow: @arguments;
    box-shadow: @arguments;
    //使用默认参数
}

.big-block {
    .box-shadow(2px; 5px; 2px);
}
/*
.big-block {
  -webkit-box-shadow: 2px 5px 2px #000;
  -moz-box-shadow: 2px 5px 2px #000;
  box-shadow: 2px 5px 2px #000;
}
*/
//--------------------------------------

.mixin() {
    @width: 100%;
    @height: 200px;
}

.caller {
    .mixin();
    width: @width;
    height: @height;
}
/*
.caller {
  width: 100%;
  height: 200px;
}
*/
